services:
  server:
    build:
      context: src
      dockerfile: backend/Dockerfile

  client:
    build:
      context: src
      dockerfile: frontend/telegram/Dockerfile

  notification_service:
    build:
      context: src
      dockerfile: notification_service/Dockerfile

  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"  # Для тестовой среды
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: bitnami/kafka:latest
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: SASL_PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: SASL_PLAINTEXT://kafka:9092
      KAFKA_CLIENT_ENABLE_AUTHENTICATION: "true"
      KAFKA_CLIENT_USER: ${KAFKA_USERNAME}
      KAFKA_CLIENT_PASSWORD: ${KAFKA_PASSWORD}"
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_CFG_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  notification-service:
    build: ./notification-service  # Путь к Dockerfile вашего микросервиса
    env_file:
      - .env
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge